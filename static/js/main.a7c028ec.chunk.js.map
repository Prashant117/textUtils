{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","myStyle","color","mode","backgroundColor","padding","borderRadius","myStyle2","Fragment","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","react_router_dom","to","title","aria-label","aboutText","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","target","rows","disabled","length","upperText","showAlert","navigator","clipboard","writeText","newText","split","join","filter","element","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","react_router","exact","path","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.a7c028ec.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Alert(props) {\n  const capitalize = (word) => {\n    let lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    //   TODO : IMPORTANT\n    <div style={{ height: \"50px\" }}>\n      {props.alert && (\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\n\nexport default function About(props) {\n  //   const [myStyle, setMyStyle] = useState({\n  //     color: \"black\",\n  //     backgroundColor: \"white\",\n  //     padding: \"10px\",\n  //     borderRadius: \"10px\",\n  //   });\n\n  let myStyle = {\n    color: props.mode === \"light\" ? \"black\" : \"white\",\n    backgroundColor: props.mode === \"light\" ? \"white\" : \"#353f42\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n  };\n  let myStyle2 = {\n    color: props.mode === \"light\" ? \"black\" : \"white\",\n    backgroundColor: props.mode === \"light\" ? \"white\" : \"rgb(0 88 95)\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={myStyle}>\n        <h2 className=\"my-3\">About Us</h2>\n        <div className=\"accordion\" id=\"accordionExample\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button\n                className=\"accordion-button\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseOne\"\n                aria-expanded=\"true\"\n                aria-controls=\"collapseOne\"\n                style={myStyle}\n              >\n                <strong>Analyze Your text</strong>\n              </button>\n            </h2>\n            <div\n              id=\"collapseOne\"\n              className=\"accordion-collapse collapse show\"\n              aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <div className=\"accordion-body\" style={myStyle2}>\n                Textutils gives you a way to analyze your text quickly and\n                efficiently. Be it word count,character count or Read time.\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseTwo\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseTwo\"\n                style={myStyle}\n              >\n                <strong>Free to use</strong>\n              </button>\n            </h2>\n            <div\n              id=\"collapseTwo\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingTwo\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <div className=\"accordion-body\" style={myStyle2}>\n                TextUtils is a free character counter tool that provides instant\n                character count & word count statistics for a given text.\n                TextUtils reports the number of words and characters. Thus it is\n                suitable for writing text with word/character limit.\n              </div>\n            </div>\n          </div>\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingThree\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseThree\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseThree\"\n                style={myStyle}\n              >\n                <strong>Browser Compatible</strong>\n              </button>\n            </h2>\n            <div\n              id=\"collapseThree\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingThree\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <div className=\"accordion-body\" style={myStyle2}>\n                This word counter software works in any web browsers such as\n                Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to\n                count characters in facebook,blog,books,excel document,pdf\n                document,essays,etc.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container my-3\">\n          {/* <button\n            onClick={toggleStyle}\n            type=\"button\"\n            className=\"btn btn-primary\"\n          >\n            {btnText}\n          </button> */}\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          {/* <a className=\"navbar-brand\" href=\"/\">\n            {props.title}\n          </a> */}\n          <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a> */}\n                {/* <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link> */}\n              </li>\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/about\">\n                  {props.aboutText}\n                </a> */}\n                <Link className=\"nav-link\" to=\"/about\">\n                  {props.aboutText}\n                </Link>\n              </li>\n            </ul>\n\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                onClick={props.toggleMode}\n                type=\"checkbox\"\n                role=\"switch\"\n                aria-checked\n                id=\"flexSwitchCheckDefault\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable Dark Mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  abuutText: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"Set Title\",\n  aboutText: \"Set About Text\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  const handleUpperCaseClick = () => {\n    let upperText = text.toUpperCase();\n    setText(upperText);\n    props.showAlert(\"Converted to UPPERCASE.\", \"success\");\n  };\n  const handleLowerCaseClick = () => {\n    let upperText = text.toLowerCase();\n    setText(upperText);\n    props.showAlert(\"Converted to lowercase.\", \"success\");\n  };\n  const handleClearClick = () => {\n    let upperText = \"\";\n    setText(upperText);\n    props.showAlert(\"Textarea cleared.\", \"success\");\n  };\n\n  const handleCopy = () => {\n    // let text = document.getElementById(\"myBox\");\n    // text.select();\n    // navigator.clipboard.writeText(text.value);\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"copied to clipboard !\", \"success\");\n  };\n\n  const handleExtraSpace = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra space removed.\", \"success\");\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h2>{props.heading}</h2>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"8\"\n            style={{\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#353f42\",\n              color: props.mode === \"light\" ? \"black\" : \"white\",\n            }}\n          ></textarea>\n        </div>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleUpperCaseClick}\n        >\n          Convert to UPPERCASE\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleLowerCaseClick}\n        >\n          Convert to lowercase\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleClearClick}\n        >\n          Clear Textarea\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleCopy}\n        >\n          Copy\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleExtraSpace}\n        >\n          Remove Extra Space\n        </button>\n      </div>\n\n      <div\n        className=\"comtainer my-3\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h3>Your text summary</h3>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words & {text.length} characters.\n        </p>\n\n        <p>\n          {0.01 *\n            text.split(\" \").filter((element) => {\n              return element.length !== 0;\n            }).length}{\" \"}\n          Minutes read.\n        </p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Nothing to Preview !\"}</p>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Light\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <TextForm\n          heading=\"Enter Text to Analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        /> */}\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter Text to Analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            ></Route>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from'react';\nimport ReactDOM from'react-dom';\nimport App from'./App';\n\n\nReactDOM.render(\n <React.StrictMode>\n    <App/>\n </React.StrictMode>,\n document.getElementById('root')\n);\n"],"sourceRoot":""}