{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","Fragment","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","upperText","showAlert","text2","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c0f707ab.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Alert(props) {\n  const capitalize = (word) => {\n    let lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    //   TODO : IMPORTANT\n    props.alert && (\n      <>\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\n          {/* <button\n            type=\"button\"\n            className=\"btn-close\"\n            data-bs-dismiss=\"alert\"\n            aria-label=\"Close\"\n          ></button> */}\n        </div>\n      </>\n    )\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            {props.title}\n          </a>\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link> */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a> */}\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link> */}\n              </li>\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/about\">\n                  {props.aboutText}\n                </a> */}\n                {/* <Link className=\"nav-link\" to=\"/about\">\n                  {props.aboutText}\n                </Link> */}\n              </li>\n            </ul>\n\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                onClick={props.toggleMode}\n                type=\"checkbox\"\n                role=\"switch\"\n                aria-checked\n                id=\"flexSwitchCheckDefault\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable Dark Mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  abuutText: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"Set Title\",\n  aboutText: \"Set About Text\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  const handleUpperCaseClick = () => {\n    let upperText = text.toUpperCase();\n    setText(upperText);\n    props.showAlert(\"Converted to UPPERCASE.\", \"success\");\n  };\n  const handleLowerCaseClick = () => {\n    let upperText = text.toLowerCase();\n    setText(upperText);\n    props.showAlert(\"Converted to lowercase.\", \"success\");\n  };\n  const handleClearClick = () => {\n    let upperText = \"\";\n    setText(upperText);\n    props.showAlert(\"Textarea cleared.\", \"success\");\n  };\n\n  const handleCopy = () => {\n    let text2 = document.getElementById(\"myBox\");\n    text2.select();\n    navigator.clipboard.writeText(text2.value);\n    props.showAlert(\"copied to clipboard !\", \"success\");\n  };\n\n  const handleExtraSpace = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra space removed.\", \"success\");\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h2>{props.heading}</h2>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"8\"\n            style={{\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#353f42\",\n              color: props.mode === \"light\" ? \"black\" : \"white\",\n            }}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpperCaseClick}>\n          Convert to UPPERCASE\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowerCaseClick}>\n          Convert to lowercase\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\n          Clear Textarea\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\n          Copy\n        </button>\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>\n          Remove Extra Space\n        </button>\n      </div>\n\n      <div\n        className=\"comtainer my-3\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h3>Your text summary</h3>\n        <p>\n          {text.split(\" \").length} words & {text.length} characters.\n        </p>\n\n        <p>{0.01 * text.split(\" \").length} Minutes to read.</p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Enter Your text to Preview.\"}</p>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Light\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          heading=\"Enter Text to Analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}></Route>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <TextForm\n                heading=\"Enter Text to Analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            }\n          ></Route>\n        </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from'react';\nimport ReactDOM from'react-dom';\nimport App from'./App';\n\n\nReactDOM.render(\n <React.StrictMode>\n    <App/>\n </React.StrictMode>,\n document.getElementById('root')\n);\n"],"sourceRoot":""}