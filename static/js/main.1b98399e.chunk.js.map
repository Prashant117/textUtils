{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","upperText","showAlert","navigator","clipboard","writeText","newText","split","join","filter","element","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.1b98399e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Alert(props) {\n  const capitalize = (word) => {\n    let lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    //   TODO : IMPORTANT\n    <div style={{ height: \"50px\" }}>\n      {props.alert && (\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            {props.title}\n          </a>\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link> */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                  Home\n                </a> */}\n                {/* <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link> */}\n              </li>\n              <li className=\"nav-item\">\n                {/* <a className=\"nav-link\" href=\"/about\">\n                  {props.aboutText}\n                </a> */}\n                {/* <Link className=\"nav-link\" to=\"/about\">\n                  {props.aboutText}\n                </Link> */}\n              </li>\n            </ul>\n\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                onClick={props.toggleMode}\n                type=\"checkbox\"\n                role=\"switch\"\n                aria-checked\n                id=\"flexSwitchCheckDefault\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable Dark Mode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  abuutText: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"Set Title\",\n  aboutText: \"Set About Text\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  const handleUpperCaseClick = () => {\n    let upperText = text.toUpperCase();\n    setText(upperText);\n    props.showAlert(\"Converted to UPPERCASE.\", \"success\");\n  };\n  const handleLowerCaseClick = () => {\n    let upperText = text.toLowerCase();\n    setText(upperText);\n    props.showAlert(\"Converted to lowercase.\", \"success\");\n  };\n  const handleClearClick = () => {\n    let upperText = \"\";\n    setText(upperText);\n    props.showAlert(\"Textarea cleared.\", \"success\");\n  };\n\n  const handleCopy = () => {\n    // let text = document.getElementById(\"myBox\");\n    // text.select();\n    // navigator.clipboard.writeText(text.value);\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"copied to clipboard !\", \"success\");\n  };\n\n  const handleExtraSpace = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra space removed.\", \"success\");\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h2>{props.heading}</h2>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"8\"\n            style={{\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#353f42\",\n              color: props.mode === \"light\" ? \"black\" : \"white\",\n            }}\n          ></textarea>\n        </div>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleUpperCaseClick}\n        >\n          Convert to UPPERCASE\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleLowerCaseClick}\n        >\n          Convert to lowercase\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleClearClick}\n        >\n          Clear Textarea\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleCopy}\n        >\n          Copy\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleExtraSpace}\n        >\n          Remove Extra Space\n        </button>\n      </div>\n\n      <div\n        className=\"comtainer my-3\"\n        style={{\n          color: props.mode === \"light\" ? \"black\" : \"white\",\n        }}\n      >\n        <h3>Your text summary</h3>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words & {text.length} characters.\n        </p>\n\n        <p>\n          {0.01 *\n            text.split(\" \").filter((element) => {\n              return element.length !== 0;\n            }).length}{\" \"}\n          Minutes read.\n        </p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Nothing to Preview !\"}</p>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Light\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm\n          heading=\"Enter Text to Analyze\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter Text to Analyze\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            ></Route>\n          </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from'react';\nimport ReactDOM from'react-dom';\nimport App from'./App';\n\n\nReactDOM.render(\n <React.StrictMode>\n    <App/>\n </React.StrictMode>,\n document.getElementById('root')\n);\n"],"sourceRoot":""}